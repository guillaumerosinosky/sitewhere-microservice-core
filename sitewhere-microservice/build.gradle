description = 'SiteWhere Common Microservice Library'

dependencies {
	// Quarkus dependencies.
    compile 'io.quarkus:quarkus-kubernetes-client'
     
	// SiteWhere model/API.
	compile group: 'com.sitewhere', name: 'sitewhere-k8s-model', version: "${rootProject.ext['sitewhere.k8s.api.version']}"
    compile group: 'com.sitewhere', name: 'sitewhere-grpc-kafka', version: "${rootProject.ext['sitewhere.grpc.api.version']}"
    
    // JSON web token support.
    compile group: 'io.jsonwebtoken', name: 'jjwt', version:'0.7.0'
	
	// Keycloak
	compile group: 'org.keycloak', name: 'keycloak-admin-client', version: '11.0.3'
    
    // SLF4J Extension for i18n.
    compile group: 'org.slf4j', name: 'slf4j-ext', version: '1.7.25'
    compile group: 'ch.qos.cal10n', name: 'cal10n-api', version: '0.7.7'    
	
	// GRPC common components.
	compile group: 'com.sitewhere', name: 'sitewhere-grpc-common', version: "${rootProject.ext['sitewhere.grpc.api.version']}"
	
	// Google Guice for configuration management.
	compile group: 'com.google.inject', name: 'guice', version: '4.2.2'
	
	// Redisson Redis client.
	compile group: 'org.redisson', name: 'redisson', version: '3.14.1'
	
	// Graal runtime support.
	compile group: 'org.graalvm.nativeimage', name: 'svm'
	
    compile group: 'org.apache.commons', name: 'commons-lang3'
    compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.4'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'commons-beanutils', name: 'commons-beanutils', version: '1.9.4'
    compile group: 'commons-io', name: 'commons-io'
    compile group: 'commons-codec', name: 'commons-codec'
    compile group: 'org.apache.httpcomponents', name: 'httpcore'
	
	// Date/time conversions.
    compile group: 'joda-time', name: 'joda-time', version:'2.9.1'
	
	// Jackson JSON processing.
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: "${rootProject.ext['jackson.version']}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${rootProject.ext['jackson.version']}"
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: "${rootProject.ext['jackson.version']}"
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-cbor', version: "${rootProject.ext['jackson.version']}"
          
    // Metrics support
    compile group: 'io.prometheus', name: 'simpleclient', version:'0.6.0'
    compile group: 'io.prometheus', name: 'simpleclient_httpserver', version:'0.6.0'
    
    // Retry logic.
    compile "com.evanlennick:retry4j:0.15.0"
    
    // Geolocation classes made available to scripts.
	compile group: 'com.vividsolutions', name: 'jts', version:'1.13'
}

license {
	exclude "**/util/Base58*"
}

processResources {
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.properties'
        filter(org.apache.tools.ant.filters.ReplaceTokens, tokens: [
            'build.timestamp': new java.text.SimpleDateFormat('yyyyMMddHHmmss').format(new Date()),
            'version.identifier' : project.version,
            'git.revision': rootProject.ext['git.revision'],
            'git.revision.abbrev': rootProject.ext['git.revision.abbrev']
        ])
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

task javadocJar(type: Jar) {
    from javadoc
    classifier = 'javadoc'
}

// Publish jar.	
apply plugin: 'maven-publish'
publishing {
	publications {
		mavenJava(MavenPublication) {
		    from components.java
            artifact sourcesJar
            artifact javadocJar
			pom {
			    name = 'SiteWhere Microservice Components'
			    description = 'SiteWhere Microservice Components Library'
			    url = 'http://sitewhere.io'
			    licenses {
			        license {
			            name = 'CPAL-1.0'
			            url = 'https://opensource.org/licenses/CPAL-1.0'
			        }
			    }
                developers {
                    developer {
                        id = 'admin'
                        name = 'SiteWhere Admin'
                        email = 'admin@sitewhere.com'
                    }
                }
                scm {
                    connection = 'https://github.com/sitewhere/sitewhere-microservice-core.git'
                    url = 'https://github.com/sitewhere/sitewhere-microservice-core'
                }
			}	
		}
	}
    repositories {
        maven {
            url project.nexusUrl
            credentials {
                username project.nexusUsername
                password project.nexusPassword
            }
        }
    }
}

if (project.hasProperty("signing.keyId")) {
	apply plugin: 'signing'
	signing {
	    sign publishing.publications.mavenJava
	}
}